# 환경변수 로드할 수 없어서 각 서버 별로 설정 후 yml 파일 사용해야 함
server:
  http_listen_port: 9080
  grpc_listen_port: 0
  #log_level: debug # 테스트용

positions:
  filename: /tmp/positions.yml  # Promtail이 읽은 로그 위치 저장 파일

clients:
  - url: http://:3100/loki/api/v1/push  # Loki Push API 주소

scrape_configs:
  - job_name: app_logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: app_logs
          host: server_1
          __path__: /app/logs/**/*.log
    relabel_configs:
      - source_labels: [__path__]
        regex: '/app/logs/(.*)'
        target_label: file_path
      - source_labels: [__path__]
        regex: '.*/([^/]+)\.log'
        target_label: filename

    # 로그를 파싱하여 메트릭을 생성하는 파이프라인
    pipeline_stages:
      - regex:
          expression: '(?i).*\[(?P<level>ERROR|WARN)\].*' # 'level' 변수명에 [ERROR] 또는 [WARN] 값을 캡쳐
      - labels:
          level:
      - metrics:
          log_errors:
            source: level
            type: Counter
            description: "Total count of ERROR level logs"
            config:
              value: "ERROR"
              action: inc
          log_warnings:
            source: level
            type: Counter
            description: "Total count of WARN level logs"
            config:
              value: "WARN"
              action: inc